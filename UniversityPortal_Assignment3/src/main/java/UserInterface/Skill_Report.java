/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import info5100.university.example.Persona.StudentProfile;
import info5100.university.example.University.University;
import info5100.university.reports.SkillsEnum;
import java.awt.CardLayout;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author swaroopgupta
 */
public class Skill_Report extends javax.swing.JPanel {

    /**
     * Creates new form GPA_Report
     */
    JPanel workArea;
    University university;
    
    public Skill_Report(JPanel workArea,University university) {
        initComponents();
        
        this.workArea = workArea;
        this.university = university;
      
        refreshTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSkill_Report = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Skill Report");

        jScrollPane1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        tblSkill_Report.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        tblSkill_Report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Technology", "No of Students", "No of Students who got Internship", "Success Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSkill_Report);

        btnBack.setText("Back<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        SummaryPanel sp = new SummaryPanel(workArea,university);
        workArea.add("SummaryPanel", sp);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea); 
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSkill_Report;
    // End of variables declaration//GEN-END:variables

    private void refreshTable() {
        // show only top 5 skils that got internship?
        DefaultTableModel model = (DefaultTableModel)tblSkill_Report.getModel();
        model.setRowCount(0);
        LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();
        HashMap<String, Integer> resultMap = generateTopSKillsReportData();
        
        resultMap.entrySet().stream().
                sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).
                forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
        
        for (Map.Entry<String, Integer> en :
             sortedMap.entrySet()) {// only top 5 has to be taken
            Object row[] = new Object[2];
            row[0]= en.getKey();
            row[1]=en.getValue();
            model.addRow(row);
        }

    }
    
    private HashMap<String, Integer> generateTopSKillsReportData(){
        HashMap<String, Integer> resultMap = new HashMap<>();
        int skillCount = 0;
        for (SkillsEnum skill : SkillsEnum.values()) { 
            for(StudentProfile student : this.university.getAllStudents()){
                if(student.getSkillSet().contains(skill)){
                    skillCount++;
                }
            }
            resultMap.put(skill.toString(), skillCount);
        }
        return resultMap;
    }
}
